plugins {
    id 'com.github.ben-manes.versions' version '0.13.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def versionMajor = 3
def versionMinor = 6
def versionPatch = 2
def versionMicro = 2

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"

    defaultConfig {
        applicationId "lt.vilnius.tvarkau"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100 + versionMicro
        versionName "$versionMajor.$versionMinor.$versionPatch.$versionMicro"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
//            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            maxHeapSize '2048m'
            minHeapSize '1600m'
            jvmArgs "-XX:MaxPermSize=1024m"
        }
    }
}

repositories {
    maven { url "https://clojars.org/repo/" }
    maven { url "http://repo.commonsware.com.s3.amazonaws.com" }
    maven { url "https://jitpack.io" }
    mavenCentral()
}

ext {
    junitVersion = '4.12'
    supportLibraryVersion = '25.0.1'
    playServicesVersion = '10.0.1'
    butterKnifeVersion = '8.4.0'
    glideVersion = '3.7.0'
    icepickVersion = '3.2.0'
    retrofitVersion = '2.1.0'
    gsonVersion = '2.8.0'
    daggerVersion = '2.8'
    javaxAnnotationVersion = '1.0'
    viewPagerIndicatorVersion = '2.4.1.1@aar'
    tedPickerVersion = 'v1.0.10'
    eventBusVersion = '3.0.0'
    stethoVersion = '1.4.1'
    okhttpVersion = '3.5.0'
    rxAndroidVersion = '1.2.1'
    rxJavaVersion = '1.2.3'
    parcelerVersion = '1.1.6'
    threeTenVersion = '1.0.4'
    photoView = '1.3.1'
    robolectricVersion = '3.1.4'
    kotlinMockitoVersion = '1.0.0'
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    compile "com.android.support:support-fragment:$supportLibraryVersion"
    compile "com.android.support:appcompat-v7:$supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$supportLibraryVersion"
    compile "com.android.support:gridlayout-v7:$supportLibraryVersion"
    compile "com.android.support:design:$supportLibraryVersion"

    compile "com.google.android.gms:play-services-maps:$playServicesVersion"
    compile "com.google.android.gms:play-services-location:$playServicesVersion"
    compile "com.google.android.gms:play-services-places:$playServicesVersion"

    compile "com.google.firebase:firebase-core:$playServicesVersion"
    compile "com.google.firebase:firebase-crash:$playServicesVersion"

    compile "frankiesardo:icepick:$icepickVersion"
    provided "frankiesardo:icepick-processor:$icepickVersion"

    compile "com.jakewharton:butterknife:$butterKnifeVersion"
    kapt "com.jakewharton:butterknife-compiler:$butterKnifeVersion"

    compile "com.github.bumptech.glide:glide:$glideVersion"

    compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava:$retrofitVersion"

    compile "com.google.code.gson:gson:$gsonVersion"

    compile "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    provided "javax.annotation:jsr250-api:$javaxAnnotationVersion"

    compile "fr.avianey.com.viewpagerindicator:library:$viewPagerIndicatorVersion"
    
    compile "org.greenrobot:eventbus:$eventBusVersion"

    compile "com.facebook.stetho:stetho:$stethoVersion"
    compile "com.facebook.stetho:stetho-okhttp3:$stethoVersion"

    compile "com.squareup.okhttp3:okhttp:$okhttpVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    compile "io.reactivex:rxandroid:$rxAndroidVersion"
    compile "io.reactivex:rxjava:$rxJavaVersion"

    compile "org.parceler:parceler-api:$parcelerVersion"
    kapt "org.parceler:parceler:$parcelerVersion"

    compile "com.jakewharton.threetenabp:threetenabp:$threeTenVersion"

    compile "com.github.chrisbanes:PhotoView:$photoView"

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile 'com.jakewharton.timber:timber:4.4.0'

    compile 'com.github.jkwiecien:EasyImage:1.4.1'


    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testCompile "junit:junit:$junitVersion"
    testCompile "org.robolectric:robolectric:$robolectricVersion"
    testCompile "org.robolectric:shadows-support-v4:$robolectricVersion"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testCompile "com.google.dagger:dagger:$daggerVersion"
    testCompile("com.nhaarman:mockito-kotlin:$kotlinMockitoVersion") {
        exclude module: 'kotlin-stdlib'
    }
    testCompile 'org.easytesting:fest-util:1.2.5'
    testCompile 'org.easytesting:fest-reflect:1.4.1'
    testCompile("com.squareup.assertj:assertj-android:1.1.1") {
        exclude group: 'com.android.support'
    }

    // https://github.com/robolectric/robolectric/issues/1932#issuecomment-219796474
    testCompile 'org.khronos:opengl-api:gl1.1-android-2.1_r1'
}

task versionName() << {
    description "Prints version name"

    println android.defaultConfig.versionName
}

// https://github.com/ben-manes/gradle-versions-plugin
dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

apply plugin: 'com.google.gms.google-services'
